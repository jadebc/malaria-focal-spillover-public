
R version 4.1.0 (2021-05-18) -- "Camp Pontanezen"
Copyright (C) 2021 The R Foundation for Statistical Computing
Platform: x86_64-apple-darwin17.0 (64-bit)

R is free software and comes with ABSOLUTELY NO WARRANTY.
You are welcome to redistribute it under certain conditions.
Type 'license()' or 'licence()' for distribution details.

  Natural language support but running in an English locale

R is a collaborative project with many contributors.
Type 'contributors()' for more information and
'citation()' on how to cite R or R packages in publications.

Type 'demo()' for some demos, 'help()' for on-line help, or
'help.start()' for an HTML browser interface to help.
Type 'q()' to quit R.

[Previously saved workspace restored]

> ################################################
> # Spillover effects of reactive, focal malaria 
> # interventions
> 
> # Namibia trial
> # Test for between-cluster spillovers 
> ################################################
> 
> rm(list=ls())
> library(rgeos)
Loading required package: sp
rgeos version: 0.5-5, (SVN revision 640)
 GEOS runtime version: 3.8.1-CAPI-1.13.3 
 Linking to sp version: 1.4-5 
 Polygon checking: TRUE 

> library(readstata13)
> library(MASS)
> library(lmtest)
Loading required package: zoo

Attaching package: ‘zoo’

The following objects are masked from ‘package:base’:

    as.Date, as.Date.numeric

> 
> source(paste0(here::here(), "/0-config.R"))
rgdal: version: 1.5-23, (SVN revision 1121)
Geospatial Data Abstraction Library extensions to R successfully loaded
Loaded GDAL runtime: GDAL 3.2.1, released 2020/12/29
Path to GDAL shared files: /Library/Frameworks/R.framework/Versions/4.1/Resources/library/rgdal/gdal
GDAL binary built with GEOS: TRUE 
Loaded PROJ runtime: Rel. 7.2.1, January 1st, 2021, [PJ_VERSION: 721]
Path to PROJ shared files: /Library/Frameworks/R.framework/Versions/4.1/Resources/library/rgdal/proj
PROJ CDN enabled: FALSE
Linking to sp version:1.4-5
To mute warnings of possible GDAL/OSR exportToProj4() degradation,
use options("rgdal_show_exportToProj4_warnings"="none") before loading rgdal.
Overwritten PROJ_LIB was /Library/Frameworks/R.framework/Versions/4.1/Resources/library/rgdal/proj

Attaching package: ‘lubridate’

The following objects are masked from ‘package:rgeos’:

    intersect, setdiff, union

The following objects are masked from ‘package:base’:

    date, intersect, setdiff, union


Attaching package: ‘reshape2’

The following object is masked from ‘package:tidyr’:

    smiths


Attaching package: ‘data.table’

The following object is masked from ‘package:purrr’:

    transpose

The following objects are masked from ‘package:reshape2’:

    dcast, melt

The following objects are masked from ‘package:lubridate’:

    hour, isoweek, mday, minute, month, quarter, second, wday, week,
    yday, year


Attaching package: ‘dplyr’

The following objects are masked from ‘package:data.table’:

    between, first, last

The following object is masked from ‘package:MASS’:

    select

The following objects are masked from ‘package:rgeos’:

    intersect, setdiff, symdiff, union

The following objects are masked from ‘package:stats’:

    filter, lag

The following objects are masked from ‘package:base’:

    intersect, setdiff, setequal, union

Registered S3 method overwritten by 'GGally':
  method from   
  +.gg   ggplot2
Warning messages:
1: package ‘ggplot2’ was built under R version 4.1.2 
2: package ‘tidyr’ was built under R version 4.1.2 
3: package ‘purrr’ was built under R version 4.1.2 
4: package ‘stringr’ was built under R version 4.1.2 
5: package ‘dplyr’ was built under R version 4.1.2 
> 
> # load locality shape file 
> shp <- rgdal::readOGR(dsn =namibia_shapefile_dsn,
+                       layer = namibia_shapefile_layer)
OGR data source with driver: ESRI Shapefile 
Source: "/Users/jadebc/Library/CloudStorage/Box-Box/NAMEP SMT Shared Folder/Datasets/Final trial data for collaborators/Shapefiles/Study area", layer: "EA_study_area_Y2"
with 102 features
It has 29 fields
Integer64 fields read as strings:  ID2 
> 
> prev <- readRDS(namibia_analysis_prev)
> 
> prev_ea <- prev %>% group_by(eaid) %>% 
+   summarise(prev = mean(qPCRposneg, na.rm=T))
> 
> # identify neighboring locality to each locality ------------------------------------
> neighbors = gTouches(shp, byid=TRUE)
> 
> # get list of all EAs
> eas = unique(shp$EA_No)
> 
> # get list of EAs in the trial 
> trial_eas = eas = unique(shp$EA[shp$Arm2!=0])
> 
> # subset matrix of neighboring localities to those in 
> # the trial 
> ind_trial_eas = apply(as.matrix(trial_eas), 1, function(x) 
+   which(eas == x))
> neighbors_trial = neighbors[ind_trial_eas, ind_trial_eas]
> assert_that(setequal(dim(neighbors_trial), c(56,56)))
[1] TRUE
> 
> # identify neighbors of each trial EA 
> # create list where each element is an EA and
> # contains a vector of that EA's neighbors
> ea_neighbor = list()
> 
> for(i in 1:length(trial_eas)){
+   x = neighbors_trial[which(trial_eas == trial_eas[i]),]
+   ea_neighbor[[i]] = trial_eas[which(x)]
+ }
> names(ea_neighbor) = trial_eas
> 
>  
> # transform data to prep for test of contamination ------------------------------------
> untx_ea = shp$EA[is.na(shp$Eas_Stud_1)]
> RO_ea = shp$EA[shp$Eas_Stud_1=="RO" & !is.na(shp$Eas_Stud_1)]
> RV_ea = shp$EA[shp$Eas_Stud_1=="RV" & !is.na(shp$Eas_Stud_1)]
> TO_ea = shp$EA[shp$Eas_Stud_1=="TO" & !is.na(shp$Eas_Stud_1)]
> TV_ea = shp$EA[shp$Eas_Stud_1=="TV" & !is.na(shp$Eas_Stud_1)]
> 
> RO_list = ea_neighbor[names(ea_neighbor) %in% RO_ea]
> RV_list = ea_neighbor[names(ea_neighbor) %in% RV_ea]
> TO_list = ea_neighbor[names(ea_neighbor) %in% TO_ea]
> TV_list = ea_neighbor[names(ea_neighbor) %in% TV_ea]
> 
> # classify each neighbor as untreated, same, or different tx
> classify_number <- function(d, tx){
+   x = matrix(NA, length(d), 1)
+   y = matrix(NA, length(d), 1)
+   
+   for(i in 1:length(d)){
+     
+     x[i,1] = case_when(
+       d[i] %in% RO_ea ~ "RO",
+       d[i] %in% RV_ea ~ "RV",
+       d[i] %in% TO_ea ~ "TO",
+       d[i] %in% TV_ea ~ "TV"
+     )
+     
+     y[i,1] = case_when(
+       d[i] %in% RO_ea & tx == "RO" ~ "Concordant",
+       d[i] %in% RO_ea & tx != "RO" ~ "Discordant",
+       d[i] %in% RV_ea & tx == "RV" ~ "Concordant",
+       d[i] %in% RV_ea & tx != "RV" ~ "Discordant",
+       d[i] %in% TO_ea & tx == "TO" ~ "Concordant",
+       d[i] %in% TO_ea & tx != "TO" ~ "Discordant",
+       d[i] %in% TV_ea & tx == "TV" ~ "Concordant",
+       d[i] %in% TV_ea & tx != "TV" ~ "Discordant"
+     )
+   }
+   
+   neighb_prev <- prev %>% filter(eaid %in% as.numeric(d)) %>% 
+     summarise(mean_prev = mean(qPCRposneg, na.rm=T))
+ 
+   # summarize neighbor characteristics
+   out = data.frame(
+     n_neighbors = length(d),
+     n_disc_neighbors = length(y[y=="Discordant"]),
+     n_disc_neighb_RO = sum(x[y=="Discordant"]=="RO"),
+     n_disc_neighb_RV = sum(x[y=="Discordant"]=="RV"),
+     n_disc_neighb_TO = sum(x[y=="Discordant"]=="TO"),
+     n_disc_neighb_TV = sum(x[y=="Discordant"]=="TV"),
+     neighb_prev = neighb_prev$mean_prev
+   )
+ 
+   return(out)
+ }
> 
> RO_neighbors = lapply(RO_list, function(x) classify_number(x, tx = "RO")) %>% 
+   bind_rows() %>%
+   mutate(EA = names(RO_list))
> RV_neighbors = lapply(RV_list, function(x) classify_number(x, tx = "RV")) %>% 
+   bind_rows() %>% 
+   mutate(EA = names(RV_list))
> TO_neighbors = lapply(TO_list, function(x) classify_number(x, tx = "TO")) %>% 
+   bind_rows() %>% 
+   mutate(EA = names(TO_list))
> TV_neighbors = lapply(TV_list, function(x) classify_number(x, tx = "TV")) %>% 
+   bind_rows() %>% 
+   mutate(EA = names(TV_list))
> 
> # one row for each EA with summary covariates
> # about neighboring EAs
> all_neighb_data = bind_rows(
+   RO_neighbors, RV_neighbors, TO_neighbors, TV_neighbors)
> 
> # merge in other EA-level variables 
> neighb_data = merge(all_neighb_data, 
+           shp@data %>% dplyr::select(EA, Eas_StudyA, Eas_Stud_1), 
+           by = "EA") %>% 
+   rename(arm = Eas_Stud_1) %>% 
+   mutate(EA = as.numeric(EA))
> 
> 
> # merge in incidence data ------------------------------------
> m <- merge(neighb_data, prev_ea,
+            by.x = "EA", by.y = "eaid", 
+            all.x = TRUE, all.y = FALSE)
> assert_that(nrow(m) == nrow(neighb_data))
[1] TRUE
> 
> m <- m %>% 
+   # filter(ea_actual!="RO49") %>% 
+   mutate(disc_neigh_cat = case_when(
+     n_disc_neighbors == 1 ~ "1", 
+     n_disc_neighbors == 2 ~ "2", 
+     n_disc_neighbors == 3 ~ "3", 
+     n_disc_neighbors >= 4 ~ "4+"
+   )) %>% 
+   mutate(disc_neigh_cat = as.factor(disc_neigh_cat))
> 
> 
> # plot incidence by neighbor incidence ------------------------------------
> ggplot(m , aes(x = neighb_prev, y= prev)) + 
+   geom_point() + 
+   geom_smooth() 
`geom_smooth()` using method = 'loess' and formula = 'y ~ x'
> 
> ggplot(m , aes(x = neighb_prev, y= prev)) + 
+   geom_point(aes(col=arm)) + 
+   facet_wrap(~arm) +
+   geom_smooth() 
`geom_smooth()` using method = 'loess' and formula = 'y ~ x'
> 
> m = m %>% mutate(armlabel = case_when(
+   arm == "RO" ~ "RACD only",
+   arm == "TO" ~ "rfMDA only",
+   arm == "TV" ~ "rfMDA + RAVC",
+   arm == "RV" ~ "RACD + RAVC"
+ )) %>% mutate(armlabel = factor(armlabel,
+                                 levels = c("RACD only", "rfMDA only", "RACD + RAVC", "rfMDA + RAVC")))
> 
> mypalette <- c("#1D6996","#0F8554","#EDAD08","#94346E")
> 
> plot <- ggplot(m , aes(x = neighb_prev, y= prev)) + 
+   geom_point(aes(col=armlabel)) + 
+   facet_grid(~armlabel) +
+   xlab("Prevalence in adjacent clusters") + 
+   ylab("Prevalence") +
+   scale_color_manual(values= mypalette) +
+   theme_bw() +
+   theme(legend.position = "none")
> ggsave(plot, filename = paste0(figure_path, "plot-between-clus-spillover-prev.png"),
+        width = 8, height =3)
> 
> 
> 
> # model prevalence by neighbor prevalence ------------------------------------
> m = m %>% mutate(
+   tpe = ifelse(arm=="TV" | arm=="TO", 1, 0), 
+   ravc = ifelse(arm=="RV" | arm=="TV", 1, 0)
+ )
> 
> # model without neighboring EA prevalence
> fit = glm(prev ~  tpe + ravc + tpe*ravc, data = m)
> summary(fit)

Call:
glm(formula = prev ~ tpe + ravc + tpe * ravc, data = m)

Deviance Residuals: 
     Min        1Q    Median        3Q       Max  
-0.05203  -0.03093  -0.01600   0.01105   0.38040  

Coefficients:
             Estimate Std. Error t value Pr(>|t|)  
(Intercept)  0.038527   0.017106   2.252   0.0286 *
tpe          0.013501   0.024191   0.558   0.5792  
ravc        -0.007596   0.024191  -0.314   0.7548  
tpe:ravc    -0.028427   0.034211  -0.831   0.4098  
---
Signif. codes:  0 ‘***’ 0.001 ‘**’ 0.01 ‘*’ 0.05 ‘.’ 0.1 ‘ ’ 1

(Dispersion parameter for gaussian family taken to be 0.004096469)

    Null deviance: 0.22251  on 55  degrees of freedom
Residual deviance: 0.21302  on 52  degrees of freedom
AIC: -143.1

Number of Fisher Scoring iterations: 2

> 
> # model with neighboring EA prevalence (continuous)
> fit_neighb = glm(prev ~  tpe + ravc + tpe*ravc + neighb_prev,
+                 data = m)
> summary(fit_neighb)

Call:
glm(formula = prev ~ tpe + ravc + tpe * ravc + neighb_prev, data = m)

Deviance Residuals: 
     Min        1Q    Median        3Q       Max  
-0.07659  -0.02912  -0.01152   0.01589   0.36477  

Coefficients:
             Estimate Std. Error t value Pr(>|t|)  
(Intercept)  0.019664   0.020087   0.979   0.3322  
tpe          0.012514   0.023761   0.527   0.6007  
ravc        -0.009206   0.023772  -0.387   0.7002  
neighb_prev  0.632808   0.369575   1.712   0.0929 .
tpe:ravc    -0.039092   0.034166  -1.144   0.2579  
---
Signif. codes:  0 ‘***’ 0.001 ‘**’ 0.01 ‘*’ 0.05 ‘.’ 0.1 ‘ ’ 1

(Dispersion parameter for gaussian family taken to be 0.003949734)

    Null deviance: 0.22251  on 55  degrees of freedom
Residual deviance: 0.20144  on 51  degrees of freedom
AIC: -144.23

Number of Fisher Scoring iterations: 2

> 
> # model with neighboring EA prevalence (categorical)
> fit_disc_neighb = glm(prev ~  tpe + ravc + tpe*ravc + disc_neigh_cat ,
+                        data = m)
> summary(fit_disc_neighb)

Call:
glm(formula = prev ~ tpe + ravc + tpe * ravc + disc_neigh_cat, 
    data = m)

Deviance Residuals: 
     Min        1Q    Median        3Q       Max  
-0.06635  -0.02759  -0.01213   0.00719   0.36608  

Coefficients:
                  Estimate Std. Error t value Pr(>|t|)
(Intercept)       0.026132   0.024170   1.081    0.285
tpe               0.010701   0.024755   0.432    0.667
ravc             -0.010426   0.025552  -0.408    0.685
disc_neigh_cat2   0.003949   0.029740   0.133    0.895
disc_neigh_cat3   0.011889   0.027718   0.429    0.670
disc_neigh_cat4+  0.029517   0.025584   1.154    0.254
tpe:ravc         -0.026165   0.035358  -0.740    0.463

(Dispersion parameter for gaussian family taken to be 0.004189379)

    Null deviance: 0.22251  on 55  degrees of freedom
Residual deviance: 0.20528  on 49  degrees of freedom
AIC: -139.17

Number of Fisher Scoring iterations: 2

> 
> # likelihood ratio test comparing models
> lrtest(fit, fit_neighb)
Likelihood ratio test

Model 1: prev ~ tpe + ravc + tpe * ravc
Model 2: prev ~ tpe + ravc + tpe * ravc + neighb_prev
  #Df LogLik Df  Chisq Pr(>Chisq)  
1   5 76.548                       
2   6 78.113  1 3.1301    0.07686 .
---
Signif. codes:  0 ‘***’ 0.001 ‘**’ 0.01 ‘*’ 0.05 ‘.’ 0.1 ‘ ’ 1
> lrtest(fit, fit_disc_neighb)
Likelihood ratio test

Model 1: prev ~ tpe + ravc + tpe * ravc
Model 2: prev ~ tpe + ravc + tpe * ravc + disc_neigh_cat
  #Df LogLik Df  Chisq Pr(>Chisq)
1   5 76.548                     
2   8 77.584  3 2.0718     0.5576
> 
> # model prevalence by neighbor prevalence ------------------------------------
> # drop outlier 
> msub <- m %>% filter(EA!="10599007" & EA!="10599024")
> 
> # model without neighboring EA prevalence
> fit_sub = glm(prev ~  tpe + ravc + tpe*ravc, data = msub)
> summary(fit_sub)

Call:
glm(formula = prev ~ tpe + ravc + tpe * ravc, data = msub)

Deviance Residuals: 
      Min         1Q     Median         3Q        Max  
-0.038527  -0.022766  -0.008689   0.012083   0.097234  

Coefficients:
             Estimate Std. Error t value Pr(>|t|)    
(Intercept)  0.038527   0.008232   4.680 2.22e-05 ***
tpe         -0.015761   0.011864  -1.328    0.190    
ravc        -0.007596   0.011642  -0.653    0.517    
tpe:ravc    -0.006481   0.016778  -0.386    0.701    
---
Signif. codes:  0 ‘***’ 0.001 ‘**’ 0.01 ‘*’ 0.05 ‘.’ 0.1 ‘ ’ 1

(Dispersion parameter for gaussian family taken to be 0.0009487286)

    Null deviance: 0.053996  on 53  degrees of freedom
Residual deviance: 0.047436  on 50  degrees of freedom
AIC: -216.77

Number of Fisher Scoring iterations: 2

> 
> # model with neighboring EA prevalence (continuous)
> fit_neighb_sub = glm(prev ~  tpe + ravc + tpe*ravc + neighb_prev,
+                     data = msub)
> summary(fit_neighb_sub)

Call:
glm(formula = prev ~ tpe + ravc + tpe * ravc + neighb_prev, data = msub)

Deviance Residuals: 
      Min         1Q     Median         3Q        Max  
-0.038881  -0.022487  -0.008155   0.011956   0.097442  

Coefficients:
             Estimate Std. Error t value Pr(>|t|)    
(Intercept)  0.037914   0.010392   3.649 0.000639 ***
tpe         -0.015754   0.011983  -1.315 0.194747    
ravc        -0.007649   0.011771  -0.650 0.518855    
neighb_prev  0.020557   0.209099   0.098 0.922086    
tpe:ravc    -0.006747   0.017161  -0.393 0.695901    
---
Signif. codes:  0 ‘***’ 0.001 ‘**’ 0.01 ‘*’ 0.05 ‘.’ 0.1 ‘ ’ 1

(Dispersion parameter for gaussian family taken to be 0.0009678995)

    Null deviance: 0.053996  on 53  degrees of freedom
Residual deviance: 0.047427  on 49  degrees of freedom
AIC: -214.78

Number of Fisher Scoring iterations: 2

> 
> # model with neighboring EA prevalence (categorical)
> fit_disc_neighb_sub = glm(prev ~  tpe + ravc + tpe*ravc + disc_neigh_cat ,
+                       data = msub)
> summary(fit_disc_neighb_sub)

Call:
glm(formula = prev ~ tpe + ravc + tpe * ravc + disc_neigh_cat, 
    data = msub)

Deviance Residuals: 
      Min         1Q     Median         3Q        Max  
-0.044861  -0.018754  -0.004463   0.011690   0.098411  

Coefficients:
                  Estimate Std. Error t value Pr(>|t|)   
(Intercept)       0.036179   0.011785   3.070  0.00355 **
tpe              -0.017061   0.012222  -1.396  0.16931   
ravc             -0.007409   0.012424  -0.596  0.55382   
disc_neigh_cat2   0.002471   0.014450   0.171  0.86495   
disc_neigh_cat3  -0.001699   0.013739  -0.124  0.90210   
disc_neigh_cat4+  0.008682   0.012537   0.693  0.49200   
tpe:ravc         -0.007146   0.017565  -0.407  0.68597   
---
Signif. codes:  0 ‘***’ 0.001 ‘**’ 0.01 ‘*’ 0.05 ‘.’ 0.1 ‘ ’ 1

(Dispersion parameter for gaussian family taken to be 0.0009880145)

    Null deviance: 0.053996  on 53  degrees of freedom
Residual deviance: 0.046437  on 47  degrees of freedom
AIC: -211.92

Number of Fisher Scoring iterations: 2

> 
> # likelihood ratio test comparing models
> lrtest(fit_sub, fit_neighb_sub)
Likelihood ratio test

Model 1: prev ~ tpe + ravc + tpe * ravc
Model 2: prev ~ tpe + ravc + tpe * ravc + neighb_prev
  #Df LogLik Df  Chisq Pr(>Chisq)
1   5 113.39                     
2   6 113.39  1 0.0107     0.9178
> lrtest(fit_sub, fit_disc_neighb_sub)
Likelihood ratio test

Model 1: prev ~ tpe + ravc + tpe * ravc
Model 2: prev ~ tpe + ravc + tpe * ravc + disc_neigh_cat
  #Df LogLik Df  Chisq Pr(>Chisq)
1   5 113.39                     
2   8 113.96  3 1.1502      0.765
> 
> 
> proc.time()
   user  system elapsed 
 17.435   0.390  19.428 
